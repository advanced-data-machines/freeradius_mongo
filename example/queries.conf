# -*- text -*-
#
#  main/mongo/queries.conf -- Mongo configuration queries
#
#  Note that as Mongo is a "schemaless" database, there is no
#  default schema.
#
#  Note also that the Mongo driver is a work in progress.  If it works
#  for you, great.  If the queries do not work, please send a patch.
#  But the FreeRADIUS team are not experts in Mongo, and cannot help
#  with creating Mongo queries.
#
#  $Id: 3b70f33b73b8e49f49842f76c1ccc806456a42a2 $

#######################################################################
#  Query config:  Username
#######################################################################
# This is the username that will get substituted, escaped, and added
# as attribute 'SQL-User-Name'.  '%{SQL-User-Name}' should be used
# below everywhere a username substitution is needed so you you can
# be sure the username passed from the client is escaped properly.
#
# Uncomment the next line, if you want the sql_user_name to mean:
#
#    Use Stripped-User-Name, if it's there.
#    Else use User-Name, if it's there,
#    Else use hard-coded string "none" as the user name.
#
#sql_user_name = "%{%{Stripped-User-Name}:-%{%{User-Name}:-none}}"

sql_user_name = "%{User-Name}"

#######################################################################
#  NAS Query
#######################################################################
#  This query retrieves the radius clients
#
#  0. Row ID (currently unused)
#  1. Name (or IP address)
#  2. Shortname
#  3. Type
#  4. Secret
#  5. Server
#######################################################################
client_query = "db.sites.aggregate([ {'$addFields': { 'tp': 'other', 'svc': null }  }, {'$project': { '_id': 1, 'name': '$wan', 'shortname': '$name', 'tp': 1, 'secret': 1, 'svr': 1  } } ])"


#######################################################################
#  Authorization Queries
#######################################################################
#  These queries compare the check items for the user
#  in ${authcheck_table} and setup the reply items in
#  ${authreply_table}.  You can use any query/tables
#  you want, but the return data for each row MUST
#  be in the  following order:
#
#  0. Row ID (currently unused)
#  1. UserName/GroupName
#  2. Item Attr Name
#  3. Item Attr Value
#  4. Item Attr Operation
#######################################################################

#
# Aggregate query that return like for SQL standard N rows with columns <attribute>,<op>,<value>
#
# Example of Result:
#
# { "attribute" : "User-Name", "Value" : "pippo", "op" : ":=" }
# { "attribute" : "ClearText-Password", "value" : "pwd1", "op" : ":=" }
# { "attribute" : "Cache-TTL", "value" : 1000, "op" : ":=" }
#
authorize_check_query = "db.rad_accounts.aggregate([ {'$addFields': { 'attribute': 'Cleartext-Password', 'op': ':=' %}%}, {'$project': { '_id': 1, 'username': 1, 'attribute': 1, 'value': '$pwd_hash', 'op': 1 %}%} ])"

# TBD: fill in things here
authorize_reply_query = ""

##################################################################

#
# TBD: fill in things here
#
#authorize_group_check_query = ""
#authorize_group_reply_query = ""

#######################################################################
# Group Membership Queries
#######################################################################
# group_membership_query        - Check user group membership
#######################################################################

#
#  TBD: Fill in things here.
#
#group_membership_query = ""


#######################################################################
# Accounting and Post-Auth Queries
#######################################################################
# These queries insert/update accounting and authentication records.
# The query to use is determined by the value of 'reference'.
# This value is used as a configuration path and should resolve to one
# or more 'query's. If reference points to multiple queries, and a query
# fails, the next query is executed.
#
# Behaviour is identical to the old 1.x/2.x module, except we can now
# fail between N queries, and query selection can be based on any
# combination of attributes, or custom 'Acct-Status-Type' values.
#######################################################################

accounting {
        reference = "%{tolower:type.%{Acct-Status-Type}.query}"

        type {

                start {
                        query = ""
                # End Start
                }

                interim-update {
                        query = ""
                # End Interim-Update
                }

                stop {
                        query = ""
                # End Stop
                }

        }
}


#######################################################################
# Authentication Logging Queries
#######################################################################
# postauth_query                - Insert some info after authentication
#######################################################################

post-auth {
        query = ""
}

